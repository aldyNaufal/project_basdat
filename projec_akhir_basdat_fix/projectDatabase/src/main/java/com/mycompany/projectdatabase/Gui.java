/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projectdatabase;

/**
 *
 * @author FX506
 */
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



public class Gui extends javax.swing.JFrame {
    /**
     * Creates new form gui
     */
    public Gui() {
        initComponents();
        
    }
        
    public void groupRadio() {
    buttonGroup1.add(ascBtn);
    buttonGroup1.add(descBtn);
}
    private void displaySortedData(String column, String sortOrder) {
    // Koneksi ke database dan eksekusi query pengurutan
    String url = "jdbc:sqlserver://localhost:1433;databaseName=jdk;user=basdat;password=1234;encrypt=true;trustServerCertificate=true;";
    
    String query = "SELECT TOP 10 pembayaran.no_transaksi, pelanggan.id_pelanggan, pelanggan.nama_pelanggan, " +
               "barang.barcode, barang.nama_barang, pembayaran.tot_bayar " +
               "FROM pembayaran " +
               "JOIN pelanggan ON pembayaran.id_pelanggan = pelanggan.id_pelanggan " +
               "JOIN barang ON barang.barcode = pembayaran.barcode " +
               "ORDER BY " + column + " " + sortOrder;
    
    try (Connection connection = DriverManager.getConnection(url);
     Statement statement = connection.createStatement();
     ResultSet resultSet = statement.executeQuery(query)) {

    // Mengisi model tabel dengan data hasil query
    DefaultTableModel model = (DefaultTableModel) tableOfData.getModel();
    model.setRowCount(0); // Menghapus semua baris yang ada

    while (resultSet.next()) {
        // Menambahkan baris baru ke model tabel
        model.addRow(new Object[]{
              resultSet.getString("no_transaksi"),
                resultSet.getInt("id_pelanggan"),
                resultSet.getString("nama_pelanggan"),
                resultSet.getString("barcode"),
                resultSet.getString("nama_barang"),
                resultSet.getFloat("tot_bayar")
            });
        }

    } catch (SQLException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Error retrieving and sorting data from the database. Error Message: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

}

    private void displaySearchResults(String column, String searchValue) {
    // Koneksi ke database dan eksekusi query pencarian
    
    String url = "jdbc:sqlserver://localhost:1433;databaseName=jdk;user=basdat;password=1234;encrypt=true;trustServerCertificate=true;";
    
    String query = "SELECT TOP 10 pembayaran.no_transaksi, pelanggan.id_pelanggan, pelanggan.nama_pelanggan, " +
               "barang.barcode, barang.nama_barang, pembayaran.tot_bayar " +
               "FROM pembayaran " +
               "JOIN pelanggan ON pembayaran.id_pelanggan = pelanggan.id_pelanggan " +
               "JOIN barang ON barang.barcode = pembayaran.barcode " +
               "Where pembayaran." + column + " = " + searchValue;
     try (Connection connection = DriverManager.getConnection(url);
     Statement statement = connection.createStatement();
     ResultSet resultSet = statement.executeQuery(query)) {

    // Mengisi model tabel dengan data hasil query
    DefaultTableModel model = (DefaultTableModel) Tabelsearch.getModel();
    model.setRowCount(0); // Menghapus semua baris yang ada

    while (resultSet.next()) {
        // Menambahkan baris baru ke model tabel
        model.addRow(new Object[]{
              resultSet.getString("no_transaksi"),
                resultSet.getInt("id_pelanggan"),
                resultSet.getString("nama_pelanggan"),
                resultSet.getString("barcode"),
                resultSet.getString("nama_barang"),
                resultSet.getFloat("tot_bayar")
            });
        }

    } catch (SQLException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Error retrieving and sorting data from the database. Error Message: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }


}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        GuiPage = new javax.swing.JTabbedPane();
        SortPane = new javax.swing.JPanel();
        basedOnLbl = new javax.swing.JLabel();
        descBtn = new javax.swing.JRadioButton();
        ascBtn = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableOfData = new javax.swing.JTable();
        SubmitBtn = new javax.swing.JButton();
        orderByLbl = new javax.swing.JLabel();
        basedOnSort = new javax.swing.JComboBox<>();
        titik_2 = new javax.swing.JLabel();
        titik_1 = new javax.swing.JLabel();
        SearchingPanel = new javax.swing.JPanel();
        Choices = new javax.swing.JComboBox<>();
        Searchbylabel = new javax.swing.JLabel();
        Searchlabel = new javax.swing.JLabel();
        Searchinput = new javax.swing.JTextField();
        Searchbutton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabelsearch = new javax.swing.JTable();
        Titikduasatu = new javax.swing.JLabel();
        Titikduadua = new javax.swing.JLabel();
        backBtn = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        basedOnLbl.setText("Based on ");

        buttonGroup1.add(descBtn);
        descBtn.setText("DESC");
        descBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                descBtnMouseClicked(evt);
            }
        });
        descBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descBtnActionPerformed(evt);
            }
        });

        buttonGroup1.add(ascBtn);
        ascBtn.setText("ASC");
        ascBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ascBtnMouseClicked(evt);
            }
        });
        ascBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ascBtnActionPerformed(evt);
            }
        });

        tableOfData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "no_transaksi", "id_pelanggan", "nama_pelanggan", "barcode", "nama_barang", "tot_bayar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableOfData);

        SubmitBtn.setText("Submit");
        SubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitBtnActionPerformed(evt);
            }
        });

        orderByLbl.setText("Order By ");

        basedOnSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "no_transaksi", "id_pelanggan", "nama_pelanggan", "barcode", "nama_barang", "tot_bayar" }));
        basedOnSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basedOnSortActionPerformed(evt);
            }
        });

        titik_2.setText(":");

        titik_1.setText(":");

        javax.swing.GroupLayout SortPaneLayout = new javax.swing.GroupLayout(SortPane);
        SortPane.setLayout(SortPaneLayout);
        SortPaneLayout.setHorizontalGroup(
            SortPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SortPaneLayout.createSequentialGroup()
                .addGap(0, 25, Short.MAX_VALUE)
                .addGroup(SortPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(SortPaneLayout.createSequentialGroup()
                        .addGroup(SortPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(orderByLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(basedOnLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(SortPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titik_2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(titik_1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(SortPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SortPaneLayout.createSequentialGroup()
                                .addComponent(ascBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(descBtn)
                                .addGap(269, 269, 269)
                                .addComponent(SubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(basedOnSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(19, 19, 19))
        );
        SortPaneLayout.setVerticalGroup(
            SortPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SortPaneLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(SortPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(basedOnLbl)
                    .addComponent(basedOnSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titik_2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SortPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderByLbl)
                    .addComponent(ascBtn)
                    .addComponent(descBtn)
                    .addComponent(titik_1)
                    .addComponent(SubmitBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );

        GuiPage.addTab("Sorting", SortPane);

        Choices.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "no_transaksi", "id_pelanggan", "barcode" }));
        Choices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChoicesActionPerformed(evt);
            }
        });

        Searchbylabel.setText("Search by");

        Searchlabel.setText("Search");

        Searchinput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchinputActionPerformed(evt);
            }
        });

        Searchbutton.setText("Search");
        Searchbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchbuttonActionPerformed(evt);
            }
        });

        Tabelsearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "no_tranksaksi", "id_pelanggan", "nama_pelanggan", "barcode", "nama_barang", "tot_bayar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Tabelsearch);

        Titikduasatu.setText(":");

        Titikduadua.setText(":");

        javax.swing.GroupLayout SearchingPanelLayout = new javax.swing.GroupLayout(SearchingPanel);
        SearchingPanel.setLayout(SearchingPanelLayout);
        SearchingPanelLayout.setHorizontalGroup(
            SearchingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchingPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(SearchingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SearchingPanelLayout.createSequentialGroup()
                        .addGroup(SearchingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Searchbylabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Searchlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SearchingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Titikduasatu, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                            .addComponent(Titikduadua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(SearchingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SearchingPanelLayout.createSequentialGroup()
                                .addComponent(Searchinput, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Searchbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(SearchingPanelLayout.createSequentialGroup()
                                .addComponent(Choices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );
        SearchingPanelLayout.setVerticalGroup(
            SearchingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchingPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(SearchingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Choices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Searchbylabel)
                    .addComponent(Titikduasatu))
                .addGap(18, 18, 18)
                .addGroup(SearchingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Searchlabel)
                    .addComponent(Searchinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Searchbutton)
                    .addComponent(Titikduadua))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                .addContainerGap())
        );

        GuiPage.addTab("Searching", SearchingPanel);

        backBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(GuiPage)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(GuiPage, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backBtn)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ChoicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChoicesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChoicesActionPerformed

    private void SearchbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchbuttonActionPerformed
        // TODO add your handling code here:
         // Mendapatkan pilihan pengguna dari JComboBox
    String selectedColumn = (String) Choices.getSelectedItem();
    
    // Mendapatkan nilai pencarian dari JTextField
    String searchValue = Searchinput.getText();
    
    // Menampilkan hasil pencarian di tabel pencarian
    displaySearchResults(selectedColumn, searchValue);
    }//GEN-LAST:event_SearchbuttonActionPerformed

    private void SubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitBtnActionPerformed
            // Mendapatkan pilihan pengguna dari JComboBox
    String selectedColumn = (String) basedOnSort.getSelectedItem();
    
    // Mendapatkan jenis pengurutan yang dipilih
    String sortOrder = ascBtn.isSelected() ? "ASC" : "DESC";
    
    // Menampilkan data di tabel berdasarkan pengurutan
    displaySortedData(selectedColumn, sortOrder);
    }//GEN-LAST:event_SubmitBtnActionPerformed

    private void SearchinputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchinputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchinputActionPerformed

    private void basedOnSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basedOnSortActionPerformed

    }//GEN-LAST:event_basedOnSortActionPerformed

    private void ascBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ascBtnActionPerformed

    }//GEN-LAST:event_ascBtnActionPerformed

    private void ascBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ascBtnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ascBtnMouseClicked

    private void descBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descBtnActionPerformed

    private void descBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_descBtnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_descBtnMouseClicked

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        ChooseAs role = new ChooseAs();
         role.setVisible(true);
         dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
     
        // ... (lanjutkan dengan logika program Anda)
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Choices;
    private javax.swing.JTabbedPane GuiPage;
    private javax.swing.JButton Searchbutton;
    private javax.swing.JLabel Searchbylabel;
    private javax.swing.JPanel SearchingPanel;
    private javax.swing.JTextField Searchinput;
    private javax.swing.JLabel Searchlabel;
    private javax.swing.JPanel SortPane;
    private javax.swing.JButton SubmitBtn;
    private javax.swing.JTable Tabelsearch;
    private javax.swing.JLabel Titikduadua;
    private javax.swing.JLabel Titikduasatu;
    private javax.swing.JRadioButton ascBtn;
    private javax.swing.JToggleButton backBtn;
    private javax.swing.JLabel basedOnLbl;
    private javax.swing.JComboBox<String> basedOnSort;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton descBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel orderByLbl;
    private javax.swing.JTable tableOfData;
    private javax.swing.JLabel titik_1;
    private javax.swing.JLabel titik_2;
    // End of variables declaration//GEN-END:variables
}
